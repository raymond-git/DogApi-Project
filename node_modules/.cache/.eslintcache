[{"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\index.js":"1","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\App.js":"2","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\reportWebVitals.js":"3","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\SignupForm.js":"4","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\SearchBreed.js":"5","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\SelectedBreed.js":"6","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\LoginForm.js":"7","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\Home.js":"8","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\HomeLogged.js":"9","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\DogBreed.js":"10","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Component\\Footer.js":"11","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Component\\NavBarLogged.js":"12","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Component\\NavBarRedirect.js":"13","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Component\\NavBar.js":"14"},{"size":554,"mtime":1674113884666,"results":"15","hashOfConfig":"16"},{"size":1238,"mtime":1674113884660,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1674113884667,"results":"18","hashOfConfig":"16"},{"size":10328,"mtime":1674331438306,"results":"19","hashOfConfig":"16"},{"size":5276,"mtime":1674113884665,"results":"20","hashOfConfig":"16"},{"size":3025,"mtime":1674113884665,"results":"21","hashOfConfig":"16"},{"size":6490,"mtime":1674331623631,"results":"22","hashOfConfig":"16"},{"size":4606,"mtime":1674113884664,"results":"23","hashOfConfig":"16"},{"size":4588,"mtime":1674113884664,"results":"24","hashOfConfig":"16"},{"size":4135,"mtime":1674113884663,"results":"25","hashOfConfig":"16"},{"size":2755,"mtime":1674113884661,"results":"26","hashOfConfig":"16"},{"size":1197,"mtime":1674113884662,"results":"27","hashOfConfig":"16"},{"size":1200,"mtime":1674113884662,"results":"28","hashOfConfig":"16"},{"size":1028,"mtime":1674113884661,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"pyxp41",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\index.js",[],[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\App.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\reportWebVitals.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\SignupForm.js",["74"],[],"import React, { useState } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdb-react-ui-kit\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Amplify, API } from 'aws-amplify';\r\n\r\n\r\n\r\n// Amplify.configure({\r\n//   Auth: {\r\n//     region: 'us-west-2',\r\n//     userPoolId: 'us-west-2_8huwQtHxw',\r\n//     userPoolWebClientId: 'a3oem26tu2b9iavd825ed19m95q',\r\n//   },\r\n//   API: {\r\n//     endpoints: [\r\n//       {\r\n//         name: \"REST API\",\r\n//         endpoint: \"https://p4z38ggupb.execute-api.us-west-2.amazonaws.com/dev\",\r\n//         region: \"us-west-2\"\r\n//       },\r\n//     ]\r\n//   }\r\n// });\r\n\r\nAmplify.configure({\r\n  aws_cloud_logic_custom: [\r\n    {\r\n      name: 'REST API', // (required) - API Name (This name is used used in the client app to identify the API - API.get('your-api-name', '/path'))\r\n      endpoint: 'https://p4z38ggupb.execute-api.us-west-2.amazonaws.com/dev', // (required) -API Gateway URL + environment\r\n      region: 'us-west-2' // (required) - API Gateway region\r\n    }\r\n  ]\r\n});\r\n\r\nfunction SignupForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleRedirectLogin = () => {\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const apiName = 'Rest API';\r\n  const path = '/dev/signup';\r\n  const myInit = {\r\n    body: JSON.stringify({\r\n      email: email,\r\n      password: password,\r\n    }),\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  API.post(apiName, path, myInit)\r\n  .then((response) => response.json())\r\n    .then((data) => {\r\n  // Making sure previous error message is removed before new error message appeared\r\n  document.getElementById(\"error-message\").textContent = \"\";\r\n  document.getElementById(\"error-message2\").textContent = \"\";\r\n  document.getElementById(\"error-message3\").textContent = \"\";\r\n  document.getElementById(\"error-message4\").textContent = \"\";\r\n\r\n  // Validate if email already exists in the MongoDB database by evaluating the 'error' property in the server's\r\n  if (data.error === \"Email already exists, try a new one\") {\r\n    const errorElement = document.getElementById(\"error-message\");\r\n    if (errorElement.childNodes.length === 0) {\r\n      const errorMessage = document.createTextNode(\"Email already exists, try a new one\");\r\n      errorElement.append(errorMessage);\r\n      errorElement.style.color = \"red\";\r\n    }\r\n  }\r\n\r\n  // Validate if the provided email input is null by evaluating the 'error' property in the server's\r\n  if (data.error === \"Please enter an email\") {\r\n    const errorElement = document.getElementById(\"error-message2\");\r\n    if (errorElement.childNodes.length === 0) {\r\n      const errorMessage = document.createTextNode(\"Please enter an email\");\r\n      errorElement.append(errorMessage);\r\n      errorElement.style.color = \"red\";\r\n    }\r\n  }\r\n\r\n  // Validate if the provided email and password input are null by evaluating the 'error' property in the server's\r\n  if (data.error === \"Please enter valid email and password\") {\r\n    const errorElement = document.getElementById(\"error-message3\");\r\n    if (errorElement.childNodes.length === 0) {\r\n      const errorMessage = document.createTextNode(\"Please enter valid email and password\");\r\n      errorElement.append(errorMessage);\r\n      errorElement.style.color = \"red\";\r\n    }\r\n  }\r\n\r\n  // Validate if the provided password input is null by evaluating the 'error' property in the server's\r\n  if (data.error === \"Please enter a password\") {\r\n    const errorElement = document.getElementById(\"error-message4\");\r\n    if (errorElement.childNodes.length === 0) {\r\n      const errorMessage = document.createTextNode(\"Please enter a password\");\r\n      errorElement.append(errorMessage);\r\n      errorElement.style.color = \"red\";\r\n    }\r\n  }\r\n\r\n  // If there are no errors, the user is successfully signed up\r\n  if (data.status === \"Success\") {\r\n    navigate(\"/login\");\r\n  }\r\n  console.log(data);\r\n  })\r\n  .catch(() => {\r\n  console.error(\"Something is wrong with your server\");\r\n  });\r\n  \r\n\r\n\r\n  // Make a post request to the server frontend.js\r\n  // async function handleSubmit(event) {\r\n  //   event.preventDefault();\r\n  //   fetch(\"https://p4z38ggupb.execute-api.us-west-2.amazonaws.com/dev/signup\", {\r\n  //     method: \"POST\",\r\n  //     body: JSON.stringify({\r\n  //       email: email,\r\n  //       password: password,\r\n  //     }),\r\n  //     headers: {\r\n  //       Accept: \"application/json\",\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //   })\r\n  //     .then((response) => response.json())\r\n  //     .then((data) => {\r\n  //       // Making sure previous error message is removed before new error message appeared\r\n  //       document.getElementById(\"error-message\").textContent = \"\";\r\n  //       document.getElementById(\"error-message2\").textContent = \"\";\r\n  //       document.getElementById(\"error-message3\").textContent = \"\";\r\n  //       document.getElementById(\"error-message4\").textContent = \"\";\r\n\r\n  //       // Validate if email already exists in the MongoDB database by evaluating the 'error' property in the server's\r\n  //       if (data.error === \"Email already exists, try a new one\") {\r\n  //         const errorElement = document.getElementById(\"error-message\");\r\n  //         if (errorElement.childNodes.length === 0) {\r\n  //           const errorMessage = document.createTextNode(\"Email already exists, try a new one\");\r\n  //           errorElement.append(errorMessage);\r\n  //           errorElement.style.color = \"red\";\r\n  //         }\r\n  //       }\r\n\r\n  //       // Validate if the provided email input is null by evaluating the 'error' property in the server's\r\n  //       if (data.error === \"Please enter an email\") {\r\n  //         const errorElement = document.getElementById(\"error-message2\");\r\n  //         if (errorElement.childNodes.length === 0) {\r\n  //           const errorMessage = document.createTextNode(\"Please enter an email\");\r\n  //           errorElement.append(errorMessage);\r\n  //           errorElement.style.color = \"red\";\r\n  //         }\r\n  //       }\r\n\r\n  //       // Validate if the provided email and password input are null by evaluating the 'error' property in the server's\r\n  //       if (data.error === \"Please enter valid email and password\") {\r\n  //         const errorElement = document.getElementById(\"error-message3\");\r\n  //         if (errorElement.childNodes.length === 0) {\r\n  //           const errorMessage = document.createTextNode(\"Please enter valid email and password\");\r\n  //           errorElement.append(errorMessage);\r\n  //           errorElement.style.color = \"red\";\r\n  //         }\r\n  //       }\r\n\r\n  //       // Validate if the provided password input is null by evaluating the 'error' property in the server's\r\n  //       if (data.error === \"Please enter a password\") {\r\n  //         const errorElement = document.getElementById(\"error-message4\");\r\n  //         if (errorElement.childNodes.length === 0) {\r\n  //           const errorMessage = document.createTextNode(\"Please enter a password\");\r\n  //           errorElement.append(errorMessage);\r\n  //           errorElement.style.color = \"red\";\r\n  //         }\r\n  //       }\r\n\r\n  //       // If there are no errors, the user is successfully signed up\r\n  //       if (data.status === \"Success\") {\r\n  //         navigate(\"/login\");\r\n  //       }\r\n  //       console.log(data);\r\n  //     })\r\n  //     .catch(() => {\r\n  //       console.error(\"Something is wrong with your server\");\r\n  //     });\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <MDBContainer className=\"my-5 gradient-form\">\r\n        <MDBRow>\r\n          <MDBCol col=\"6\" className=\"mb-5  overflow-hidden\">\r\n            <div className=\"d-flex flex-column ms-5\">\r\n              <div className=\"logo-center\">\r\n                <img src=\"/doglogo.png\" style={{ width: \"185px\" }} alt=\"logo\" />\r\n              </div>\r\n              <p className=\"mt-24\">Sign up a free account to browse a list of dogs</p>\r\n\r\n              <Form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                <span id=\"error-message\"></span>\r\n                <span id=\"error-message2\"></span>\r\n                <span id=\"error-message3\"></span>\r\n                <MDBInput\r\n                  wrapperClass=\"mb-4\"\r\n                  placeholder=\"Username\"\r\n                  id=\"form1\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={handleEmailChange}\r\n                />\r\n                <span id=\"error-message4\"></span>\r\n                <MDBInput\r\n                  wrapperClass=\"mb-4\"\r\n                  placeholder=\"Password\"\r\n                  id=\"form2\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={handlePasswordChange}\r\n                />\r\n                <div className=\"text-center pt-1 mb-5 pb-1\">\r\n                  <button className=\"mb-4 w-100 gradient-custom-2 signupButton\">Sign Up</button>\r\n                  <a className=\"text-muted\" href=\"#!\">Forgot password?</a>\r\n                </div>\r\n              </Form>\r\n\r\n              <div className=\"d-flex flex-row align-items-center justify-content-center pb-4 mb-4\">\r\n                <p className=\"mb-0\">Have an account?</p>\r\n                <MDBBtn\r\n                  onClick={handleRedirectLogin}\r\n                  outline\r\n                  className=\"mx-2\"\r\n                  color=\"danger\"\r\n                >\r\n                  Go to Login\r\n                </MDBBtn>\r\n              </div>\r\n            </div>\r\n          </MDBCol>\r\n\r\n          <MDBCol col=\"6\" className=\"mb-5\">\r\n            <div className=\"d-flex justify-content-center h-100\">\r\n              <img\r\n                className=\"text-white px-3 py-4 p-md-5 mx-md-4 dog-images-responsive\"\r\n                id=\"dogHome\"\r\n                src=\"/dogHome.png\"\r\n                width=\"580\"\r\n                height=\"640\"\r\n                alt=\"dogimage\"\r\n              />\r\n            </div>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupForm;\r\n","C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\SearchBreed.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\SelectedBreed.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\LoginForm.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\Home.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\HomeLogged.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Webpages\\DogBreed.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Component\\Footer.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Component\\NavBarLogged.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Component\\NavBarRedirect.js",[],[],"C:\\Users\\Raymond Huang\\Downloads\\DogApiProject\\DogApi-Project\\src\\Component\\NavBar.js",[],[],{"ruleId":"75","severity":2,"message":"76","line":211,"column":48,"nodeType":"77","messageId":"78","endLine":211,"endColumn":60},"no-undef","'handleSubmit' is not defined.","Identifier","undef"]