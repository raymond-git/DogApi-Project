{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymo\\\\Downloads\\\\UdemyProjects\\\\DogApi-Project\\\\src\\\\SignupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignupForm() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  // Make a post request to the server frontend.js\n  async function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:3002/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        email: email\n      }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success:\", data);\n    }).catch(() => {\n      console.error(\"Something is wrong with your server\");\n    });\n  }\n\n  //Create Dropdown Menu\n  const [dogBreeds, setDogBreeds] = useState([]);\n  const fetchImage = async () => {\n    const dog = await fetch(\"https://dog.ceo/api/breeds/list/all\");\n    const dogList = await dog.json();\n\n    //Get all of the object for the dogs\n    const dogNames = Object.keys(dogList.message);\n    setDogBreeds(dogNames);\n  };\n  useEffect(() => {\n    fetchImage();\n  }, []);\n\n  //Select Option and display image\n  const [imageUrl, setImageUrl] = useState([]);\n  const SelectBreed = async event => {\n    const BreedValues = event.target.value;\n    const dogImageUrl = `https://dog.ceo/api/breed/${BreedValues}/images/random`;\n    const data = await fetch(dogImageUrl);\n    const getDog = await data.json();\n    setImageUrl(getDog.message);\n  };\n  useEffect(() => {\n    const options = document.getElementById(\"dropdownmenu\");\n    if (options != null) {\n      options.addEventListener(\"change\", event => SelectBreed(event));\n      return () => {\n        options.removeEventListener(\"change\", event => SelectBreed(event));\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"dropdownmenu\",\n      children: dogBreeds.map((breed, uniqueId) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: breed,\n        children: [\" \", breed, \" \"]\n      }, uniqueId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), [imageUrl].map(specificImage => /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"contain-image\",\n      src: imageUrl,\n      style: {\n        width: \"300px\",\n        height: \"300px\",\n        objectFit: \"cover\"\n      },\n      alt: \"dogImages\"\n    }, specificImage, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupForm, \"hx4HNMusvjLULJUODTmvZUHFp3s=\");\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useEffect","useState","SignupForm","name","setName","email","setEmail","handleNameChange","event","target","value","handleEmailChange","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","headers","Accept","then","response","json","data","console","log","catch","error","dogBreeds","setDogBreeds","fetchImage","dog","dogList","dogNames","Object","keys","message","imageUrl","setImageUrl","SelectBreed","BreedValues","dogImageUrl","getDog","options","document","getElementById","addEventListener","removeEventListener","map","breed","uniqueId","specificImage","width","height","objectFit"],"sources":["C:/Users/raymo/Downloads/UdemyProjects/DogApi-Project/src/SignupForm.js"],"sourcesContent":["import React, { useEffect, useState, } from 'react';\r\n\r\nfunction SignupForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  // Make a post request to the server frontend.js\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    fetch(\"http://localhost:3002/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n      }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Success:\", data);\r\n      })\r\n      .catch(() => {\r\n        console.error(\"Something is wrong with your server\");\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n//Create Dropdown Menu\r\nconst [dogBreeds, setDogBreeds] = useState([]);\r\nconst fetchImage = async () => {\r\n  const dog = await fetch(\"https://dog.ceo/api/breeds/list/all\");\r\n  const dogList = await dog.json();\r\n\r\n  //Get all of the object for the dogs\r\n  const dogNames = Object.keys(dogList.message);\r\n  setDogBreeds(dogNames);\r\n};\r\n\r\nuseEffect(() => {\r\n  fetchImage();\r\n}, []);\r\n\r\n\r\n\r\n//Select Option and display image\r\nconst [imageUrl, setImageUrl] = useState([]);\r\n\r\nconst SelectBreed = async (event) => {\r\n  const BreedValues = event.target.value;\r\n  const dogImageUrl = `https://dog.ceo/api/breed/${BreedValues}/images/random`;\r\n  const data = await fetch(dogImageUrl);\r\n  const getDog = await data.json();\r\n  setImageUrl(getDog.message);\r\n};\r\n\r\n  useEffect(() => {\r\n    const options = document.getElementById(\"dropdownmenu\");\r\n    if (options != null) {\r\n      options.addEventListener(\"change\", (event) => SelectBreed(event));\r\n      return () => {\r\n        options.removeEventListener(\"change\", (event) => SelectBreed(event));\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name:{\" \"}\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Email:{\" \"}\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n          name=\"email\"\r\n        />\r\n      </label>\r\n      <br />\r\n      <input type=\"submit\" value=\"Submit\"></input>\r\n\r\n      {/* <option key={uniqueId} value={breed}>{breed}</option> \r\n      This creates an option element with a key and value and set current elements to dogBreeds array [   ]*/}\r\n      <select id=\"dropdownmenu\">\r\n        {dogBreeds.map((breed, uniqueId) => (\r\n          <option key={uniqueId} value={breed}> {breed} </option>\r\n        ))}\r\n      </select>\r\n\r\n      {[imageUrl].map((specificImage) => (\r\n        <img\r\n          id=\"contain-image\"\r\n          key={specificImage}\r\n          src={imageUrl}\r\n          style={{ width: \"300px\", height: \"300px\", objectFit: \"cover\" }}\r\n          alt=\"dogImages\"\r\n        ></img>\r\n      ))}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignupForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}