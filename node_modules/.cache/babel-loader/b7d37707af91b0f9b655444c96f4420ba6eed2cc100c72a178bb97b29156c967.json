{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymo\\\\Downloads\\\\UdemyProjects\\\\DogApi-Project\\\\src\\\\DogBreed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DogBreed() {\n  _s();\n  // Dropdown Menu\n  // Get all of the object for the dogs. For example:\n  // {\n  //   \"message\": {\n  //      \"affenpinscher\": [],\n  //      \"african\": [],\n  //      \"australian\": [\n  //          \"shepherd\"\n  //      ],\n  // }\n\n  // useState with .map() example: \n  // dogBreeds = [\" \", \" \"]\n  // setDogBreeds[\"object\", \"object\"]\n  // breed = [\"object\"(uniqueId), \"object\"(uniqueId)] in dogBreeds.map(breed)\n\n  //Get all list of dogs for option dropdown menu\n  const [dogBreeds, setDogBreeds] = useState([]);\n  const fetctDog = async () => {\n    const getData = await fetch(\"https://dog.ceo/api/breeds/list/all\");\n    const allBreed = await getData.json();\n    const dogNames = Object.keys(allBreed.message);\n    setDogBreeds(dogNames);\n  };\n  useEffect(() => {\n    fetctDog();\n  }, []);\n\n  // Populate dog once image is selected\n  // const [dogImage, setDogImage] = useState();\n  // const breedOption = async (event) => {\n  // const BreedName = event.target.value;\n  // const dogImageUrl = `https://dog.ceo/api/breed/${BreedName}/images/random`\n  // const dogImage = await fetch(dogImageUrl);\n  // const getDog = await dogImage.json();\n  // setDogImage(getDog.message);\n  // };\n\n  // useEffect(() => {\n  //   const options = document.getElementById(\"dropdownmenu\");\n  //   if (options != null) {\n  //     options.addEventListener(\"change\", (event) => breedOption(event));\n  //     return () => {\n  //       options.removeEventListener(\"change\", (event) => breedOption(event));\n  //     };\n  //   }\n  // }, []);\n\n  // Get all sub-Breed for option dropdownmenu2\n  const [subBreed, setSubBreed] = useState([]);\n  const fetchSubBreed = async () => {\n    const getData = await fetch(`https://dog.ceo/api/breeds/list/all`);\n    const getSubBreed = await getData.json();\n    const value = Object.values(getSubBreed.message);\n    let storeValue = value.flat(); // The flat method make the value array into a single array  *Example: [1, 2, [3, 4, 5], 6] = [1, 2, 3, 4, 5, 6]\n    setSubBreed(storeValue);\n  };\n  useEffect(() => {\n    fetchSubBreed();\n  }, []);\n  const [subBreedImage, setSubBreedImage] = useState();\n  const loadSubImage = async event => {\n    // const values = event.target.value;\n    // const values = event.target.value;\n    //  const subBreedUrl = await fetch(`https://dog.ceo/api/breed/${values}/list`);\n    //  const getSubBreed = await subBreedUrl.json();\n    //  const value = Object.values(getSubBreed.message);\n    //  let storeValue = value.flat();\n    //  setSubBreedImage(storeValue);\n\n    //  console.log(storeValue);\n\n    const values = event.target.value;\n    const subBreedUrl = await fetch(`https://dog.ceo/api/breed/${values}/list`);\n    const getSubBreed = await subBreedUrl.json();\n    const retrieveSubBreed = getSubBreed.message;\n    setSubBreedImage(storeValue);\n    console.log(storeValue);\n  };\n  useEffect(() => {\n    const option = document.getElementById(\"dropdownmenu2\");\n    if (option != null) {\n      option.addEventListener(\"change\", event => loadSubImage(event));\n      return () => {\n        option.removeEventListener(\"change\", event => loadSubImage(event));\n      };\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dropdownmenu\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Please select a breed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), dogBreeds.map((breed, uniqueId) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: breed,\n            children: breed\n          }, uniqueId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"dropdownmenu2\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Please select sub breed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), subBreed.map((breed2, uniqueId2) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: breed2,\n            children: breed2\n          }, uniqueId2, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subBreedImages\",\n          children: [subBreedImage].map(breedImage => {\n            /*#__PURE__*/_jsxDEV(\"img\", {\n              src: breedImage,\n              style: {\n                width: \"380px\",\n                height: \"300px\",\n                objectFit: \"cover\"\n              }\n            }, breedImage, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(DogBreed, \"6zhOzh66oMvTnznbbWL4eU8PSD0=\");\n_c = DogBreed;\nexport default DogBreed;\nvar _c;\n$RefreshReg$(_c, \"DogBreed\");","map":{"version":3,"names":["React","useEffect","useState","DogBreed","dogBreeds","setDogBreeds","fetctDog","getData","fetch","allBreed","json","dogNames","Object","keys","message","subBreed","setSubBreed","fetchSubBreed","getSubBreed","value","values","storeValue","flat","subBreedImage","setSubBreedImage","loadSubImage","event","target","subBreedUrl","retrieveSubBreed","console","log","option","document","getElementById","addEventListener","removeEventListener","map","breed","uniqueId","breed2","uniqueId2","breedImage","width","height","objectFit"],"sources":["C:/Users/raymo/Downloads/UdemyProjects/DogApi-Project/src/DogBreed.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction DogBreed(){\r\n\r\n    // Dropdown Menu\r\n    // Get all of the object for the dogs. For example:\r\n    // {\r\n    //   \"message\": {\r\n    //      \"affenpinscher\": [],\r\n    //      \"african\": [],\r\n    //      \"australian\": [\r\n    //          \"shepherd\"\r\n    //      ],\r\n    // }\r\n\r\n    // useState with .map() example: \r\n    // dogBreeds = [\" \", \" \"]\r\n    // setDogBreeds[\"object\", \"object\"]\r\n    // breed = [\"object\"(uniqueId), \"object\"(uniqueId)] in dogBreeds.map(breed)\r\n\r\n\r\n    //Get all list of dogs for option dropdown menu\r\n    const [dogBreeds, setDogBreeds] = useState([]);\r\n    const fetctDog = async () => {\r\n      const getData = await fetch(\"https://dog.ceo/api/breeds/list/all\");\r\n      const allBreed = await getData.json();\r\n      const dogNames = Object.keys(allBreed.message);\r\n      setDogBreeds(dogNames);\r\n    };\r\n    useEffect(()=> {\r\n        fetctDog();\r\n    }, [])\r\n\r\n    // Populate dog once image is selected\r\n    // const [dogImage, setDogImage] = useState();\r\n    // const breedOption = async (event) => {\r\n    // const BreedName = event.target.value;\r\n    // const dogImageUrl = `https://dog.ceo/api/breed/${BreedName}/images/random`\r\n    // const dogImage = await fetch(dogImageUrl);\r\n    // const getDog = await dogImage.json();\r\n    // setDogImage(getDog.message);\r\n    // };\r\n\r\n    // useEffect(() => {\r\n    //   const options = document.getElementById(\"dropdownmenu\");\r\n    //   if (options != null) {\r\n    //     options.addEventListener(\"change\", (event) => breedOption(event));\r\n    //     return () => {\r\n    //       options.removeEventListener(\"change\", (event) => breedOption(event));\r\n    //     };\r\n    //   }\r\n    // }, []);\r\n\r\n     // Get all sub-Breed for option dropdownmenu2\r\n     const [subBreed, setSubBreed] = useState([]);\r\n     const fetchSubBreed = async () => {\r\n       const getData = await fetch(`https://dog.ceo/api/breeds/list/all`);\r\n       const getSubBreed = await getData.json();\r\n       const value = Object.values(getSubBreed.message);\r\n       let storeValue = value.flat(); // The flat method make the value array into a single array  *Example: [1, 2, [3, 4, 5], 6] = [1, 2, 3, 4, 5, 6]\r\n       setSubBreed(storeValue);\r\n     };\r\n\r\n     useEffect(() => {\r\n       fetchSubBreed();\r\n     }, []);\r\n\r\n\r\n     const [subBreedImage, setSubBreedImage] = useState();\r\n     const loadSubImage = async (event) => {\r\n     \r\n      // const values = event.target.value;\r\n      // const values = event.target.value;\r\n      //  const subBreedUrl = await fetch(`https://dog.ceo/api/breed/${values}/list`);\r\n      //  const getSubBreed = await subBreedUrl.json();\r\n      //  const value = Object.values(getSubBreed.message);\r\n      //  let storeValue = value.flat();\r\n      //  setSubBreedImage(storeValue);\r\n\r\n      //  console.log(storeValue);\r\n\r\n      const values = event.target.value;\r\n      const subBreedUrl = await fetch(`https://dog.ceo/api/breed/${values}/list`);\r\n      const getSubBreed = await subBreedUrl.json();\r\n      const retrieveSubBreed = getSubBreed.message;\r\n      setSubBreedImage(storeValue);\r\n\r\n      console.log(storeValue);\r\n\r\n\r\n\r\n     };\r\n\r\n     useEffect(() => {\r\n      const option = document.getElementById(\"dropdownmenu2\");\r\n      if(option != null){\r\n        option.addEventListener(\"change\", (event) => loadSubImage(event));\r\n        return () => {\r\n          option.removeEventListener(\"change\", (event) => loadSubImage(event));\r\n        }\r\n      }\r\n     }, [])\r\n   \r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-6-sm\">\r\n          <select id=\"dropdownmenu\">\r\n            <option>Please select a breed</option>\r\n            {dogBreeds.map((breed, uniqueId) => (\r\n              <option key={uniqueId} value={breed}>\r\n                {breed}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"col-6-sm\">\r\n          <select id=\"dropdownmenu2\">\r\n            <option>Please select sub breed</option>\r\n            {subBreed.map((breed2, uniqueId2) => (\r\n              <option key={uniqueId2} value={breed2}>\r\n                {breed2}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"col-6-sm\">\r\n          <div className=\"subBreedImages\">\r\n            {[subBreedImage].map((breedImage) => {\r\n              <img\r\n                src={breedImage}\r\n                key={breedImage}\r\n                style={{ width: \"380px\", height: \"300px\", objectFit: \"cover\" }}\r\n              ></img>;\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div className='col-6-sm'>\r\n          <div className=\"dogImages\">\r\n            {[dogImage].map((specificImage) => (\r\n              <img\r\n                id=\"contain-image\"\r\n                src={specificImage}\r\n                key={specificImage}\r\n                style={{ width: \"380px\", height: \"300px\", objectFit: \"cover\" }}\r\n                alt=\"Dog Images\"\r\n              ></img>\r\n            ))}\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DogBreed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,SAASC,QAAQ,GAAE;EAAA;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMI,QAAQ,GAAG,YAAY;IAC3B,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;IAClE,MAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAI,EAAE;IACrC,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAACK,OAAO,CAAC;IAC9CT,YAAY,CAACM,QAAQ,CAAC;EACxB,CAAC;EACDV,SAAS,CAAC,MAAK;IACXK,QAAQ,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEC;EACA,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMe,aAAa,GAAG,YAAY;IAChC,MAAMV,OAAO,GAAG,MAAMC,KAAK,CAAE,qCAAoC,CAAC;IAClE,MAAMU,WAAW,GAAG,MAAMX,OAAO,CAACG,IAAI,EAAE;IACxC,MAAMS,KAAK,GAAGP,MAAM,CAACQ,MAAM,CAACF,WAAW,CAACJ,OAAO,CAAC;IAChD,IAAIO,UAAU,GAAGF,KAAK,CAACG,IAAI,EAAE,CAAC,CAAC;IAC/BN,WAAW,CAACK,UAAU,CAAC;EACzB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdgB,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,EAAE;EACpD,MAAMuB,YAAY,GAAG,MAAOC,KAAK,IAAK;IAErC;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA,MAAMN,MAAM,GAAGM,KAAK,CAACC,MAAM,CAACR,KAAK;IACjC,MAAMS,WAAW,GAAG,MAAMpB,KAAK,CAAE,6BAA4BY,MAAO,OAAM,CAAC;IAC3E,MAAMF,WAAW,GAAG,MAAMU,WAAW,CAAClB,IAAI,EAAE;IAC5C,MAAMmB,gBAAgB,GAAGX,WAAW,CAACJ,OAAO;IAC5CU,gBAAgB,CAACH,UAAU,CAAC;IAE5BS,OAAO,CAACC,GAAG,CAACV,UAAU,CAAC;EAIxB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACf,MAAM+B,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;IACvD,IAAGF,MAAM,IAAI,IAAI,EAAC;MAChBA,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAGT,KAAK,IAAKD,YAAY,CAACC,KAAK,CAAC,CAAC;MACjE,OAAO,MAAM;QACXM,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAGV,KAAK,IAAKD,YAAY,CAACC,KAAK,CAAC,CAAC;MACtE,CAAC;IACH;EACD,CAAC,EAAE,EAAE,CAAC;EAET,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB;UAAQ,EAAE,EAAC,cAAc;UAAA,wBACvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAsC,EACrCtB,SAAS,CAACiC,GAAG,CAAC,CAACC,KAAK,EAAEC,QAAQ,kBAC7B;YAAuB,KAAK,EAAED,KAAM;YAAA,UACjCA;UAAK,GADKC,QAAQ;YAAA;YAAA;YAAA;UAAA,QAGtB,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA;MACK;QAAA;QAAA;QAAA;MAAA,QACL,eAEN;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB;UAAQ,EAAE,EAAC,eAAe;UAAA,wBACxB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAwC,EACvCxB,QAAQ,CAACsB,GAAG,CAAC,CAACG,MAAM,EAAEC,SAAS,kBAC9B;YAAwB,KAAK,EAAED,MAAO;YAAA,UACnCA;UAAM,GADIC,SAAS;YAAA;YAAA;YAAA;UAAA,QAGvB,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA;MACK;QAAA;QAAA;QAAA;MAAA,QACL,eAEN;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB;UAAK,SAAS,EAAC,gBAAgB;UAAA,UAC5B,CAAClB,aAAa,CAAC,CAACc,GAAG,CAAEK,UAAU,IAAK;YACnC;cACE,GAAG,EAAEA,UAAW;cAEhB,KAAK,EAAE;gBAAEC,KAAK,EAAE,OAAO;gBAAEC,MAAM,EAAE,OAAO;gBAAEC,SAAS,EAAE;cAAQ;YAAE,GAD1DH,UAAU;cAAA;cAAA;cAAA;YAAA,QAEV;UACT,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MACE;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA;EAeF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA1JQvC,QAAQ;AAAA,KAARA,QAAQ;AA4JjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}