{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymo\\\\Downloads\\\\UdemyProjects\\\\DogApi-Project\\\\src\\\\SignupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// import axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignupForm() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [dogBreeds, setDogBreeds] = useState([]);\n  const [imageUrl, setImageUrl] = useState('');\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n\n  // Make a post request to the server frontend.js\n  async function handleSubmit(event) {\n    event.preventDefault();\n    fetch(\"http://localhost:3002/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: name,\n        email: email\n      }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success:\", data);\n    }).catch(() => {\n      console.error(\"Something is wrong with your server\");\n    });\n  }\n\n  //Create Dropdown Menu\n  const fetchImage = async () => {\n    const dog = await fetch(\"https://dog.ceo/api/breeds/list/all\");\n    const dogList = dog.json();\n\n    //Get all of the object for the dogs\n    const dogNames = Object.keys(dogList.message);\n    setDogBreeds(dogNames);\n  };\n  useEffect(() => {\n    fetchImage();\n  }, []);\n\n  //Select Option and display image\n  const SelectBreed = async event => {\n    const BreedValues = event.target.value;\n    const dogImageUrl = `https://dog.ceo/api/breed/${BreedValues}/images/random`;\n    const data = await fetch(dogImageUrl);\n    const getDog = data.json();\n    setImageUrl(getDog.message);\n    const options = document.getElementById(\"dropdownmenu\");\n    if (options != null) {\n      options.addEventListener(\"change\", SelectBreed);\n    }\n    return () => {\n      if (options != null) {\n        options.removeEventListener(\"change\", SelectBreed);\n      }\n    };\n  };\n  useEffect(() => {\n    SelectBreed();\n  });\n\n  // Create a dropdown menu  \n  // useEffect(() => {\n  //    async function FetchDogData() {\n  //      const dog = await fetch(\"https://dog.ceo/api/breeds/list/all\");\n  //      const dogList = await dog.json();\n\n  //      //Get all of the object for the dogs\n  //      const dogNames = Object.keys(dogList.message);\n  //      setDogBreeds(dogNames);\n  //     };\n  //    FetchDogData();\n\n  //   }, []);\n\n  // useEffect(() => {\n  //   const SelectBreed = async (event) => {\n  //     const BreedValues = event.target.value;\n  //     const dogImageUrl = `https://dog.ceo/api/breed/${BreedValues}/images/random`;\n  //     const data = await fetch(dogImageUrl);\n  //     const getDog = data.json();\n\n  //     setImageUrl(getDog.message);\n  //   };\n\n  //   const options = document.getElementById(\"dropdownmenu\");\n  //   if (options != null) {\n  //     options.addEventListener(\"change\", SelectBreed);\n  //   }\n\n  //   return () => {\n  //     if (options != null) {\n  //       options.removeEventListener(\"change\", SelectBreed);\n  //     }\n  //   };\n  // }, []);\n\n  // Trigger change when press on a breed\n  // const options = document.getElementById('dropdownmenu');\n\n  //  if (options != null) {\n  //   options.addEventListener(\"change\", async function () {\n  //     const BreedValues = this.value;\n  //     const dogImageUrl = `https://dog.ceo/api/breed/${BreedValues}/images/random`;\n  //     const data = await fetch(dogImageUrl)\n  //     const getDog = data.json();\n\n  //     if (options.value === BreedValues) {\n  //       const imageElement = document.createElement(\"img\");\n  //       imageElement.src = getDog.message;\n\n  //       //Get the id from <img id=\"contain-image\" src=\"\"></img> and then execute\n  //       const imgContainer = document.getElementById(\"contain-image\");\n\n  //       if (imgContainer.hasChildNodes()) {\n  //         imgContainer.removeChild(imgContainer.lastChild);\n  //       } else {\n  //         // Add imageElement.src source to <img id=\"contain-image\" src=\"\"></img>\n  //         // `.append()` basically add new elements to the end of an array. For example: let numbers = [1, 2, 3]; numbers.append(4); [1, 2, 3, 4]\n  //         imgContainer.append(imageElement);\n  //         document.getElementById(\"postImage\").appendChild(imageElement);\n  //       }\n  //     }\n  //   });\n  //  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", \" \", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", \" \", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"dropdownmenu\",\n      children: dogBreeds.map((breed, uniqueId) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: breed,\n        children: breed\n      }, uniqueId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"contain-image\",\n      accept: \"image/*\",\n      src: imageUrl,\n      style: {\n        width: '300px',\n        height: '300px',\n        objectFit: 'cover'\n      },\n      alt: \"dogImages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupForm, \"17I9CVO+od0IgoisCQxVo0ev09I=\");\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useEffect","useState","SignupForm","name","setName","email","setEmail","dogBreeds","setDogBreeds","imageUrl","setImageUrl","handleNameChange","event","target","value","handleEmailChange","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","headers","Accept","then","response","json","data","console","log","catch","error","fetchImage","dog","dogList","dogNames","Object","keys","message","SelectBreed","BreedValues","dogImageUrl","getDog","options","document","getElementById","addEventListener","removeEventListener","map","breed","uniqueId","width","height","objectFit"],"sources":["C:/Users/raymo/Downloads/UdemyProjects/DogApi-Project/src/SignupForm.js"],"sourcesContent":["import React, { useEffect, useState, } from 'react';\r\n\r\n// import axios from 'axios';\r\nfunction SignupForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [dogBreeds, setDogBreeds] = useState([]);\r\n  const [imageUrl, setImageUrl] = useState('');\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  // Make a post request to the server frontend.js\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    fetch(\"http://localhost:3002/login\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name: name,\r\n        email: email,\r\n      }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Success:\", data);\r\n      })\r\n      .catch(() => {\r\n        console.error(\"Something is wrong with your server\");\r\n      });\r\n  }\r\n\r\n\r\n//Create Dropdown Menu\r\nconst fetchImage = async () => {\r\n  const dog = await fetch(\"https://dog.ceo/api/breeds/list/all\");\r\n  const dogList = dog.json();\r\n\r\n  //Get all of the object for the dogs\r\n  const dogNames = Object.keys(dogList.message);\r\n  setDogBreeds(dogNames);\r\n};\r\n\r\nuseEffect(() => {\r\n  fetchImage();\r\n}, []);\r\n\r\n\r\n//Select Option and display image\r\nconst SelectBreed = async(event) => {\r\n  const BreedValues = event.target.value;\r\n        const dogImageUrl = `https://dog.ceo/api/breed/${BreedValues}/images/random`;\r\n        const data = await fetch(dogImageUrl);\r\n        const getDog = data.json();\r\n\r\n        setImageUrl(getDog.message);\r\n\r\n        const options = document.getElementById(\"dropdownmenu\");\r\n       if (options != null) {\r\n         options.addEventListener(\"change\", SelectBreed);\r\n       }\r\n\r\n       return () => {\r\n         if (options != null) {\r\n           options.removeEventListener(\"change\", SelectBreed);\r\n         }\r\n       };\r\n};\r\n\r\nuseEffect(() => {\r\n  SelectBreed()\r\n},);\r\n\r\n\r\n\r\n  // Create a dropdown menu  \r\n  // useEffect(() => {\r\n  //    async function FetchDogData() {\r\n  //      const dog = await fetch(\"https://dog.ceo/api/breeds/list/all\");\r\n  //      const dogList = await dog.json();\r\n       \r\n  //      //Get all of the object for the dogs\r\n  //      const dogNames = Object.keys(dogList.message);\r\n  //      setDogBreeds(dogNames);\r\n  //     };\r\n  //    FetchDogData();\r\n\r\n  //   }, []);\r\n\r\n\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //   const SelectBreed = async (event) => {\r\n    //     const BreedValues = event.target.value;\r\n    //     const dogImageUrl = `https://dog.ceo/api/breed/${BreedValues}/images/random`;\r\n    //     const data = await fetch(dogImageUrl);\r\n    //     const getDog = data.json();\r\n\r\n    //     setImageUrl(getDog.message);\r\n    //   };\r\n\r\n    //   const options = document.getElementById(\"dropdownmenu\");\r\n    //   if (options != null) {\r\n    //     options.addEventListener(\"change\", SelectBreed);\r\n    //   }\r\n\r\n    //   return () => {\r\n    //     if (options != null) {\r\n    //       options.removeEventListener(\"change\", SelectBreed);\r\n    //     }\r\n    //   };\r\n    // }, []);\r\n\r\n   \r\n    \r\n\r\n\r\n    // Trigger change when press on a breed\r\n    // const options = document.getElementById('dropdownmenu');\r\n\r\n    //  if (options != null) {\r\n    //   options.addEventListener(\"change\", async function () {\r\n    //     const BreedValues = this.value;\r\n    //     const dogImageUrl = `https://dog.ceo/api/breed/${BreedValues}/images/random`;\r\n    //     const data = await fetch(dogImageUrl)\r\n    //     const getDog = data.json();\r\n\r\n    //     if (options.value === BreedValues) {\r\n    //       const imageElement = document.createElement(\"img\");\r\n    //       imageElement.src = getDog.message;\r\n        \r\n    //       //Get the id from <img id=\"contain-image\" src=\"\"></img> and then execute\r\n    //       const imgContainer = document.getElementById(\"contain-image\");\r\n          \r\n    //       if (imgContainer.hasChildNodes()) {\r\n    //         imgContainer.removeChild(imgContainer.lastChild);\r\n    //       } else {\r\n    //         // Add imageElement.src source to <img id=\"contain-image\" src=\"\"></img>\r\n    //         // `.append()` basically add new elements to the end of an array. For example: let numbers = [1, 2, 3]; numbers.append(4); [1, 2, 3, 4]\r\n    //         imgContainer.append(imageElement);\r\n    //         document.getElementById(\"postImage\").appendChild(imageElement);\r\n    //       }\r\n    //     }\r\n    //   });\r\n    //  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name:{\" \"} <input type=\"text\" name=\"name\" value={name} onChange={handleNameChange} \r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Email:{\" \"} <input type=\"email\" value={email} onChange={handleEmailChange} name=\"email\" \r\n        />\r\n      </label>\r\n      <br />\r\n      <input type=\"submit\" value=\"Submit\"></input>\r\n\r\n\r\n      {/* <option key={uniqueId} value={breed}>{breed}</option> \r\n      This creates an option element with a key and value and set current elements to dogBreeds array [   ]*/}\r\n      <select id=\"dropdownmenu\">{dogBreeds.map((breed, uniqueId) => \r\n          (<option key={uniqueId} value={breed}>{breed}</option>))}\r\n      </select>\r\n\r\n      <img id=\"contain-image\" accept=\"image/*\" src={imageUrl} style={{width: '300px', height: '300px', objectFit: 'cover'}} alt=\"dogImages\"></img>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignupForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAS,OAAO;;AAEnD;AAAA;AACA,SAASC,UAAU,GAAG;EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClCR,OAAO,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,iBAAiB,GAAIH,KAAK,IAAK;IACnCN,QAAQ,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;;EAED;EACA,eAAeE,YAAY,CAACJ,KAAK,EAAE;IACjCA,KAAK,CAACK,cAAc,EAAE;IACtBC,KAAK,CAAC,6BAA6B,EAAE;MACnCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBnB,IAAI,EAAEA,IAAI;QACVE,KAAK,EAAEA;MACT,CAAC,CAAC;MACFkB,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAAC;IAC/B,CAAC,CAAC,CACDG,KAAK,CAAC,MAAM;MACXF,OAAO,CAACG,KAAK,CAAC,qCAAqC,CAAC;IACtD,CAAC,CAAC;EACN;;EAGF;EACA,MAAMC,UAAU,GAAG,YAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAAC,qCAAqC,CAAC;IAC9D,MAAMiB,OAAO,GAAGD,GAAG,CAACP,IAAI,EAAE;;IAE1B;IACA,MAAMS,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACH,OAAO,CAACI,OAAO,CAAC;IAC7C/B,YAAY,CAAC4B,QAAQ,CAAC;EACxB,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACdiC,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA,MAAMO,WAAW,GAAG,MAAM5B,KAAK,IAAK;IAClC,MAAM6B,WAAW,GAAG7B,KAAK,CAACC,MAAM,CAACC,KAAK;IAChC,MAAM4B,WAAW,GAAI,6BAA4BD,WAAY,gBAAe;IAC5E,MAAMb,IAAI,GAAG,MAAMV,KAAK,CAACwB,WAAW,CAAC;IACrC,MAAMC,MAAM,GAAGf,IAAI,CAACD,IAAI,EAAE;IAE1BjB,WAAW,CAACiC,MAAM,CAACJ,OAAO,CAAC;IAE3B,MAAMK,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IACxD,IAAIF,OAAO,IAAI,IAAI,EAAE;MACnBA,OAAO,CAACG,gBAAgB,CAAC,QAAQ,EAAEP,WAAW,CAAC;IACjD;IAEA,OAAO,MAAM;MACX,IAAII,OAAO,IAAI,IAAI,EAAE;QACnBA,OAAO,CAACI,mBAAmB,CAAC,QAAQ,EAAER,WAAW,CAAC;MACpD;IACF,CAAC;EACR,CAAC;EAEDxC,SAAS,CAAC,MAAM;IACdwC,WAAW,EAAE;EACf,CAAC,CAAE;;EAID;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAME;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAMA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEF,oBACE;IAAM,QAAQ,EAAExB,YAAa;IAAA,wBAC3B;MAAA,oBACQ,GAAG,oBAAE;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEb,IAAK;QAAC,QAAQ,EAAEQ;MAAiB;QAAA;QAAA;QAAA;MAAA,QAChF;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,qBACS,GAAG,oBAAE;QAAO,IAAI,EAAC,OAAO;QAAC,KAAK,EAAEN,KAAM;QAAC,QAAQ,EAAEU,iBAAkB;QAAC,IAAI,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QACrF;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAO,IAAI,EAAC,QAAQ;MAAC,KAAK,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAK5C;MAAQ,EAAE,EAAC,cAAc;MAAA,UAAER,SAAS,CAAC0C,GAAG,CAAC,CAACC,KAAK,EAAEC,QAAQ,kBACpD;QAAuB,KAAK,EAAED,KAAM;QAAA,UAAEA;MAAK,GAA9BC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAiC;IAAC;MAAA;MAAA;MAAA;IAAA,QACnD,eAET;MAAK,EAAE,EAAC,eAAe;MAAC,MAAM,EAAC,SAAS;MAAC,GAAG,EAAE1C,QAAS;MAAC,KAAK,EAAE;QAAC2C,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAC,GAAG,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QACvI;AAEX;AAAC,GAjLQpD,UAAU;AAAA,KAAVA,UAAU;AAmLnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}