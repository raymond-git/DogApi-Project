{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymo\\\\Downloads\\\\UdemyProjects\\\\DogApi-Project\\\\src\\\\DogBreed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NavBar from \"./Component/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DogBreed() {\n  _s();\n  // Get all list of dogs for option dropdown menu\n  const [dogBreeds, setDogBreeds] = useState([]);\n  useEffect(() => {\n    fetch(\"https://dog.ceo/api/breeds/list/all\").then(response => response.json()).then(getData => {\n      const getBreed = Object.keys(getData.message);\n      setDogBreeds(getBreed);\n    });\n  }, []);\n\n  // Populate dog once image is selected\n  const [dogImage, setDogImage] = useState();\n  const fetchDogImage = BreedName => {\n    fetch(`https://dog.ceo/api/breed/${BreedName}/images/random`).then(response => response.json()).then(getData => {\n      setDogImage(getData.message);\n    });\n  };\n  useEffect(() => {\n    const options = document.getElementById(\"dropdownmenu\");\n    if (options != null) {\n      options.addEventListener(\"change\", event => {\n        const BreedName = event.target.value;\n        fetchDogImage(BreedName);\n      });\n    }\n    return () => {\n      options.removeEventListener(\"change\", event => {\n        const BreedName = event.target.value;\n        fetchDogImage(BreedName);\n      });\n\n      // const imageGrid = document.querySelector('.dogImages');\n      // for(const image of images){\n      //   const imgElement = document.createElement('img');\n      //   imgElement.src = image;\n      //   imageGrid.appendChild(imgElement);\n      // }\n    };\n  }, []);\n\n  // Get random images when click button\n  const [subBreed, setSubBreed] = useState([]);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  useEffect(() => {\n    fetch(\"https://dog.ceo/api/breeds/image/random\").then(response => response.json()).then(getSubBreed => {\n      setSubBreed(getSubBreed);\n    });\n  }, [buttonClicked]);\n  const handleButtonChange = () => {\n    setButtonClicked(!buttonClicked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dogBreed-title\",\n        children: \"Welcome to the dog World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"option-wrap\",\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"dropdownmenu\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Please select a breed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), dogBreeds.map((breed, uniqueId) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: breed,\n              children: breed\n            }, uniqueId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"randomImageButton\",\n            onClick: handleButtonChange,\n            children: [\" \", \"Click Random Image\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dogImages\",\n            children: [dogImage].map(specificImage => /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"contain-image\",\n              src: specificImage,\n              style: {\n                width: \"380px\",\n                height: \"300px\",\n                objectFit: \"cover\"\n              },\n              alt: \"Dog Images\"\n            }, specificImage, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(DogBreed, \"P4VsBeWeltVIjc0CR8/PS93bR+k=\");\n_c = DogBreed;\nexport default DogBreed;\nvar _c;\n$RefreshReg$(_c, \"DogBreed\");","map":{"version":3,"names":["React","useEffect","useState","NavBar","DogBreed","dogBreeds","setDogBreeds","fetch","then","response","json","getData","getBreed","Object","keys","message","dogImage","setDogImage","fetchDogImage","BreedName","options","document","getElementById","addEventListener","event","target","value","removeEventListener","subBreed","setSubBreed","buttonClicked","setButtonClicked","getSubBreed","handleButtonChange","map","breed","uniqueId","specificImage","width","height","objectFit"],"sources":["C:/Users/raymo/Downloads/UdemyProjects/DogApi-Project/src/DogBreed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"./Component/NavBar\";\r\n\r\nfunction DogBreed() {\r\n\r\n  // Get all list of dogs for option dropdown menu\r\n  const [dogBreeds, setDogBreeds] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"https://dog.ceo/api/breeds/list/all\")\r\n      .then((response) => response.json())\r\n      .then((getData) => {\r\n        const getBreed = Object.keys(getData.message);\r\n        setDogBreeds(getBreed);\r\n      });\r\n  }, []);\r\n\r\n  // Populate dog once image is selected\r\n  const [dogImage, setDogImage] = useState();\r\n  const fetchDogImage = (BreedName) => {\r\n    fetch(`https://dog.ceo/api/breed/${BreedName}/images/random`)\r\n      .then((response) => response.json())\r\n      .then((getData) => {\r\n        setDogImage(getData.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const options = document.getElementById(\"dropdownmenu\");\r\n    if (options != null) {\r\n      options.addEventListener(\"change\", (event) => {\r\n        const BreedName = event.target.value;\r\n        fetchDogImage(BreedName);\r\n      });\r\n    }\r\n    return () => {\r\n      options.removeEventListener(\"change\", (event) => {\r\n        const BreedName = event.target.value;\r\n        fetchDogImage(BreedName);\r\n      });\r\n\r\n      // const imageGrid = document.querySelector('.dogImages');\r\n      // for(const image of images){\r\n      //   const imgElement = document.createElement('img');\r\n      //   imgElement.src = image;\r\n      //   imageGrid.appendChild(imgElement);\r\n      // }\r\n    };\r\n\r\n  }, []);\r\n\r\n  // Get random images when click button\r\n  const [subBreed, setSubBreed] = useState([]);\r\n  const [buttonClicked, setButtonClicked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://dog.ceo/api/breeds/image/random\")\r\n      .then((response) => response.json())\r\n      .then((getSubBreed) => {\r\n        setSubBreed(getSubBreed);\r\n      });\r\n  }, [buttonClicked]);\r\n\r\n  const handleButtonChange = () => {\r\n    setButtonClicked(!buttonClicked);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\" id=\"container\">\r\n        {/* Navbar links calling from Component/Navbar.js */}\r\n        <NavBar></NavBar>\r\n\r\n        <div className=\"dogBreed-title\">Welcome to the dog World</div>\r\n        <div id=\"option-wrap\" className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <select id=\"dropdownmenu\">\r\n              <option>Please select a breed</option>\r\n              {dogBreeds.map((breed, uniqueId) => (\r\n                <option key={uniqueId} value={breed}>\r\n                  {breed}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"col-sm\">\r\n            <button className=\"randomImageButton\" onClick={handleButtonChange}>\r\n              {\" \"}\r\n              Click Random Image{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <div className=\"dogImages\">\r\n              {[dogImage].map((specificImage) => (\r\n                <img\r\n                  id=\"contain-image\"\r\n                  src={specificImage}\r\n                  key={specificImage}\r\n                  style={{\r\n                    width: \"380px\",\r\n                    height: \"300px\",\r\n                    objectFit: \"cover\",\r\n                  }}\r\n                  alt=\"Dog Images\"\r\n                ></img>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"col-6-sm\">\r\n            <img\r\n              src={subBreed.message}\r\n              alt=\"random dog\"\r\n              style={{ width: \"380px\", height: \"300px\", objectFit: \"cover\" }}\r\n            ></img>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DogBreed;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}